import { FileWriter } from "../tools/FileWriter";

export function writeEntityMetaClass(fileWriter: FileWriter): void {
  fileWriter.write(`EntityMeta.ts`, (buffer) => {
    buffer.line(`export class EntityMeta {`);
    buffer.tabIn();
    buffer.line(`private readonly created: Date;`);
    buffer.line(`private modified: Date | null;`);
    buffer.line(`private deleted: boolean;`);
    buffer.line(``);
    buffer.line(`public constructor(params: {`);
    buffer.tabIn();
    buffer.line(`created: Date;`);
    buffer.line(`modified: Date | null;`);
    buffer.line(`deleted: boolean;`);
    buffer.tabOut();
    buffer.line(`}) {`);
    buffer.tabIn();
    buffer.line(`this.created = params.created;`);
    buffer.line(`this.modified = params.modified;`);
    buffer.line(`this.deleted = params.deleted;`);
    buffer.tabOut();
    buffer.line(`}`);
    buffer.line(``);
    buffer.line(`public static createNew(): EntityMeta {`);
    buffer.line(`}`);
    buffer.line(``);
    buffer.line(`public static fromJson(json: any): EntityMeta {`);
    buffer.line(`}`);
    buffer.line(``);
    buffer.line(`public toJson(): any {`);
    buffer.line(`}`);
    buffer.line(``);
    buffer.line(`public getCreated(): Date {`);
    buffer.tabIn();
    buffer.line(`return this.created;`);
    buffer.tabOut();
    buffer.line(`}`);
    buffer.line(``);
    buffer.line(`public getModified(): Date | null {`);
    buffer.tabIn();
    buffer.line(`return this.modified;`);
    buffer.tabOut();
    buffer.line(`}`);
    buffer.line(``);
    buffer.line(`public getDeleted(): boolean {`);
    buffer.tabIn();
    buffer.line(`return this.deleted;`);
    buffer.tabOut();
    buffer.line(`}`);
    buffer.line(``);
    buffer.line(`public setModified(date: Date): void {`);
    buffer.tabIn();
    buffer.line(`this.modified = date;`);
    buffer.tabOut();
    buffer.line(`}`);
    buffer.line(``);
    buffer.line(`public setDeleted(deleted: boolean): void {`);
    buffer.tabIn();
    buffer.line(`this.deleted = deleted;`);
    buffer.tabOut();
    buffer.line(`}`);
    buffer.tabOut();
    buffer.line(`}`);
  });
}
